#!/usr/bin/env python

from sensetw.components import Hypothesis, Trello
from sensetw.applications import h2trello
import logging
import configparser
import os

logger = logging.Logger("h2trello")
logger.setLevel(logging.WARNING)
logger.addHandler(logging.StreamHandler())

conf_path = os.path.join(os.path.dirname(__file__), "../h2trello.conf")
conf = configparser.ConfigParser()
conf.read(conf_path)

mappings = [
    {
        "hypothesis_title": "AI 人才培育",
        "hypothesis_url": "https://sense.tw/groups/RNYBizqX/ai-ren-cai-pei-yu",
        "trello_title": "AI 人材培育問題點分析",
        "trello_url": "https://trello.com/b/Lo01hfDB/ai-%E4%BA%BA%E6%9D%90%E5%9F%B9%E8%82%B2%E5%95%8F%E9%A1%8C%E9%BB%9E%E5%88%86%E6%9E%90",
    }
]


def mapping_to_components(conf, mapping):
    h = Hypothesis(api_url=conf["Hypothesis"]["api_url"],
                   api_key=conf["Hypothesis"]["api_key"],
                   title=mapping["hypothesis_title"],
                   url=mapping["hypothesis_url"])
    t = Trello(api_url=conf["Trello"]["api_url"],
               api_key=conf["Trello"]["api_key"],
               token=conf["Trello"]["token"],
               title=mapping["trello_title"],
               url=mapping["trello_url"])
    return h, t


h2trello_log = h2trello.load_log()

for mapping in mappings:
    h, t = mapping_to_components(conf, mapping)
    r = h2trello.send(h, t,
                      lambda card: h2trello.find_log_by_hypothesis_id(
                          h2trello_log, card.hypothesis_id) == -1,
                      limit=1)
    h2trello_log.extend(r)

h2trello.save_log(h2trello_log)
